// Generated by LiveScript 1.6.0
(function(){
  var Item, item, out$ = typeof exports != 'undefined' && exports || this;
  out$.Item = Item = (function(){
    Item.displayName = 'Item';
    var prototype = Item.prototype, constructor = Item;
    function Item(basic, id, name, icon){
      this.json = basic;
      this.json["minecraft:item"].description.identifier = id;
      this.json["minecraft:item"].components["minecraft:display_name"] = {
        value: name
      };
      this.json["minecraft:item"].components["minecraft:icon"] = {
        texture: icon
      };
      this.icon = icon;
      this.name = name;
    }
    Item.prototype.texture = function(path){
      return {
        textures: path
      };
    };
    Item.prototype.description = function(pos, data){
      this.json["minecraft:item"].description[pos] = data;
      return this;
    };
    Item.prototype.setData = function(pos, data){
      this.json["minecraft:item"].components[pos] = data;
      return this;
    };
    Item.prototype.item = function(){
      return this.json;
    };
    Item.prototype.getJson = function(){
      return this.json;
    };
    Item.prototype.on = function(event, cb){
      var ref$;
      (ref$ = this.json["minecraft:item"]).events == null && (ref$.events = {});
      return cb(function(it){
        this.json["minecraft:item"].events[event] = {};
        return this.json["minecraft:item"].events[event].run_command = {
          command: Array.isArray(it)
            ? it
            : [it]
        };
      });
    };
    Item.prototype.create = function(id, name, icon){
      return new Item(this.json, id, name, icon);
    };
    return Item;
  }());
  out$.item = item = new Item({
    format_version: "1.17.100",
    "minecraft:item": {
      description: {},
      components: {}
    }
  }, "item.id", "item.name", "item.icon");
}).call(this);
