// Generated by LiveScript 1.6.0
(function(){
  var Block, block, out$ = typeof exports != 'undefined' && exports || this;
  out$.Block = Block = (function(){
    Block.displayName = 'Block';
    var prototype = Block.prototype, constructor = Block;
    function Block(basic, id, name, icon){
      this.json = basic;
      this.json["minecraft:block"].description.identifier = id;
      this.json["minecraft:block"].components["minecraft:display_name"] = name;
      this.json["minecraft:block"].components["minecraft:material_instances"] = typeof icon === "string" ? {
        "*": {
          texture: icon,
          render_method: "blend"
        }
      } : icon;
      this.icon = icon;
      this.name = name;
    }
    Block.prototype.texture = function(path){
      return {
        textures: path
      };
    };
    Block.prototype.description = function(pos, data){
      this.json["minecraft:block"].description[pos] = data;
      return this;
    };
    Block.prototype.setData = function(pos, data){
      this.json["minecraft:block"].components[pos] = data;
      return this;
    };
    Block.prototype.block = function(){
      return this.json;
    };
    Block.prototype.getJson = function(){
      return this.json;
    };
    Block.prototype.on = function(event, cb){
      var ref$;
      (ref$ = this.json["minecraft:block"]).events == null && (ref$.events = {});
      return cb(function(it){
        this.json["minecraft:block"].events[event] = {};
        return this.json["minecraft:block"].events[event].run_command = {
          command: Array.isArray(it)
            ? it
            : [it]
        };
      });
    };
    Block.prototype.create = function(id, name, icon){
      return new Block(this.json, id, name, icon);
    };
    return Block;
  }());
  out$.block = block = new Block({
    format_version: "1.17.100",
    "minecraft:block": {
      description: {},
      components: {}
    }
  }, "block.id", "block.name", "block.icon");
}).call(this);
